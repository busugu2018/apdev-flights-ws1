<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
	<flow name="getFlightsFlow">
		<http:listener config-ref="HTTP_Listener_Configuration" path="/flights" allowedMethods="GET" doc:name="HTTP"/>
		<set-variable variableName="airline" value="#[message.inboundProperties.'http.query.params'.airline]" doc:name="Set airline variable"/>
		<flow-ref name="setCodeSubflow" doc:name="setCodeSubflow"/>
		<validation:is-not-empty message="You must pass the destination as a query parametercalled code" exceptionClass="java.lang.IllegalArgumentException" value="#[flowVars.code]" doc:name="Validation"/>
		<choice doc:name="Choice">
			<when expression="#[flowVars.airline==&quot;delta&quot;]">
				<flow-ref name="getDeltaFlightsFlow" doc:name="getDeltaFlightsFlow"/>
			</when>
			<when expression="#[flowVars.airline==&quot;united&quot;]">
				<flow-ref name="getUnitedFlightsFlow" doc:name="getUnitedFlightsFlow"/>
			</when>
			<when expression="#[flowVars.airline==&quot;american&quot;]">
				<flow-ref name="getAmericanFlightsFlow" doc:name="getAmericanFlightsFlow"/>
			</when>
			<otherwise>
				<flow-ref name="getAllAirlineFlightsFlow" doc:name="getAllAirlineFlightsFlow"/>
			</otherwise>
		</choice>
		<dw:transform-message doc:name="Transform Message">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload orderBy $.price]]></dw:set-payload>
		</dw:transform-message>
		<logger level="INFO" doc:name="Logger"/>

	</flow>
	<sub-flow name="setCodeSubflow">
		<set-variable variableName="code" value="#[message.inboundProperties.'http.query.params'.code]" doc:name="Variable"/>
	</sub-flow>
	<flow name="getUnitedFlightsFlow">
		<http:request config-ref="United_REST_Request_Configuration" path="/essentials/united/flights/{destination}" method="GET" doc:name="United REST Request">
			<http:request-builder>
				<http:uri-param paramName="destination" value="#[flowVars.code]"/>
			</http:request-builder>
		</http:request>
		<dw:transform-message doc:name="Transform Message" metadata:id="03c62177-0f18-42ec-b5f8-5335ae3fc0d5">
			<dw:input-payload doc:sample="/Users/nziemaraangnzienguiboussougou/Desktop/MUFundamentals3.9_studentFiles_13apr2020/examples/united-flights-example.json" mimeType="application/json"/>
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.flights map ((flight , indexOfFlight) -> {
	airlineName: flight.airlineName,
	availableSeats: flight.emptySeats,
	departureDate: flight.departureDate,
	destination: flight.destination,
	flightCode: flight.code,
	origination: flight.origin,
	planeType: flight.planeType,
	price: flight.price
} as :object {
	class : "com.mulesoft.training.Flight"
})]]></dw:set-payload>
		</dw:transform-message>
		<logger level="INFO" doc:name="Logger"/>
	</flow>
	<flow name="getAmericanFlightsFlow">
		<http:request config-ref="American_HTTP_Request_Configuration" path="/flights" method="GET" doc:name="American_REST_Request"/>
		<dw:transform-message doc:name="Transform Message" metadata:id="7121a233-82cb-4da7-8d93-636d7edca23c">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map ((payload01 , indexOfPayload01) -> {
	airlineName: "American" ++ null,
	availableSeats: payload01.emptySeats,
	departureDate: payload01.departureDate,
	destination: payload01.destination,
	flightCode: payload01.code,
	origination: payload01.origin,
	planeType: payload01.plane.type,
	price: payload01.price
} as :object {
	class : "com.mulesoft.training.Flight"
})]]></dw:set-payload>
		</dw:transform-message>
	</flow>
	<flow name="getDeltaFlightsFlow">
		<dw:transform-message doc:name="Transform Message">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://soap.training.mulesoft.com/
---
{
	ns0#findFlight: {
		destination: flowVars.code as :string
	}
}]]></dw:set-payload>
		</dw:transform-message>
		<ws:consumer config-ref="Delta_Web_Service_Consumer" operation="findFlight" doc:name="Delta SOAP Request"/>
		<dw:transform-message doc:name="Transform Message" metadata:id="5416bce0-f877-4cbd-bbab-1a9c00aa51cf">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
%namespace ns0 http://soap.training.mulesoft.com/
---
payload.ns0#findFlightResponse.*return map ((return , indexOfReturn) -> {
	airlineName: return.airlineName,
	availableSeats: return.emptySeats,
	departureDate: return.departureDate,
	destination: return.destination,
	flightCode: return.code,
	origination: return.origin,
	planeType: return.planeType,
	price: return.price
} as :object {
	class : "com.mulesoft.training.Flight"
})]]></dw:set-payload>
		</dw:transform-message>
		<logger level="INFO" doc:name="Logger"/>
	</flow>
	<flow name="getAllAirlineFlightsFlow">
		<scatter-gather doc:name="Scatter-Gather">
			<processor-chain>
				<flow-ref name="getDeltaFlightsFlow" doc:name="getDeltaFlightsFlow"/>
				<payload-type-filter expectedType="java.util.ArrayList" doc:name="Payload"/>
			</processor-chain>
			<processor-chain>
				<flow-ref name="getUnitedFlightsFlow" doc:name="getUnitedFlightsFlow"/>
				<payload-type-filter expectedType="java.util.ArrayList" doc:name="Payload"/>
			</processor-chain>
			<processor-chain>
				<flow-ref name="getAmericanFlightsFlow" doc:name="getAmericanFlightsFlow"/>
				<payload-type-filter expectedType="java.util.ArrayList" doc:name="Payload"/>
			</processor-chain>
		</scatter-gather>
		<dw:transform-message doc:name="Transform Message">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
flatten payload]]></dw:set-payload>
		</dw:transform-message>
		<logger level="INFO" doc:name="Logger"/>
	</flow>
	<flow name="postFlightFlow">
		<http:listener config-ref="HTTP_Listener_Configuration" path="/flights" allowedMethods="POST" doc:name="HTTP"/>
		<dw:transform-message doc:name="Transform Message" metadata:id="9303e3cb-7079-4882-939a-8ed6a65d27ac">
			<dw:input-payload doc:sample="/Users/nziemaraangnzienguiboussougou/Desktop/MUFundamentals3.9_studentFiles_13apr2020/examples/flight-example.json" mimeType="application/json"/>
			<dw:set-payload resource="classpath:json_flight_playground.dwl"/>
			<dw:set-variable variableName="xml"><![CDATA[%dw 1.0
%output application/xml
---
data: {
	hub: "MUA",
	flight:  {
		code: payload.toAirportCode,
		airline: payload.airline	
	}
}]]></dw:set-variable>
		</dw:transform-message>
		<logger level="INFO" doc:name="Logger"/>
	</flow>
	<flow name="postMultipleFlightsFlow">
		<http:listener config-ref="HTTP_Listener_Configuration" path="/multipleFlights" allowedMethods="POST" doc:name="HTTP"/>
		<dw:transform-message doc:name="Transform Message" metadata:id="d5f449a2-11cd-47c8-a331-ea342b4870c2">
			<dw:input-payload doc:sample="/Users/nziemaraangnzienguiboussougou/Desktop/MUFundamentals3.9_studentFiles_13apr2020/examples/flights-example.xml" mimeType="application/xml"/>
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
flights: payload.ns0#listAllFlightsResponse.*return map {
		dest: $.destination,
		price: $.price as :number as :string {format: "###.##"},
		plane: upper $.planeType,
		date: $.departureDate as :date {format: "yyyy/MM/dd"} as :string {format: "MMM dd, yyyy"}
}]]></dw:set-payload>
		</dw:transform-message>
		<logger level="INFO" doc:name="Logger"/>
	</flow>
</mule>
